{"version":3,"sources":["components/Header.js","components/Article.js","components/News.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","title","Article","_props$article","article","source","url","urlToImage","description","src","alt","name","target","rel","News","TransitionGroup","this","news","map","CSSTransition","key","timeout","components_Article","Component","Form","categoryRef","React","createRef","submitCategory","e","preventDefault","_this","newsConsult","current","value","onSubmit","id","ref","defaultValue","type","App","state","category","arguments","length","undefined","concat","fetch","then","rta","json","setState","articles","components_Header","Form_Form","News_News","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5a99988.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = (props) => {\n  return(\n    <nav>\n      <div className=\"nav-wrapper light-blue darken-3\">\n        <a className=\"brand-logo center\" href={\"#\"}>{props.title}</a>\n      </div>\n    </nav>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Article = (props) => {\n\n  const { source, title, url, urlToImage, description} = props.article;\n\n\n  return(\n    <div className=\"col s12 m6 l4\">\n      <div className=\"card\">\n      <div className=\"card-image\">\n      <img src={urlToImage} alt={title}/>\n      <span className=\"card-title\">\n      {source.name}\n      </span>\n      </div>\n      <div className=\"card-content\">\n        <h3>{title}</h3>\n        <p>{description}</p>\n      </div>\n      <div className=\"card-action\">\n        <a href={url} target=\"_blank\" className=\"waves-effects waves-light btn\" rel=\"noopener noreferrer\">\n          Keep reading...\n        </a>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Article\n\nArticle.propTypes = {\n  article: PropTypes.shape({\n    urlToImage: PropTypes.string,\n    url : PropTypes.string,\n    title : PropTypes.string,\n    source : PropTypes.object,\n    description : PropTypes.string\n  })\n}\n","import React,{Component} from 'react';\nimport Article from './Article'\nimport PropTypes from 'prop-types';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\n\nexport default class News extends Component {\n\n    render() {\n        return (\n            <div className=\"row\">\n              <TransitionGroup>\n                {this.props.news.map( article => (\n                <CSSTransition\n                  key={article.url}\n                  className=\"fade\"\n                  timeout={200}>\n                    <Article\n                      article={article}/>\n                </CSSTransition>\n                ))}\n              </TransitionGroup>\n            </div>\n        );\n    }\n}\n\nNews.propTypes = {\n  news : PropTypes.array.isRequired\n}\n","import React,{Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Form extends Component {\n\n  categoryRef = React.createRef();\n\n    submitCategory = e => {\n      e.preventDefault();\n\n      this.props.newsConsult(this.categoryRef.current.value);\n    }\n\n    render() {\n        return (\n            <div className=\"buscador row\">\n                <div className=\"col s12 m8 offset-m2\">\n                <form onSubmit={this.submitCategory}>\n                  <h2>News by Category</h2>\n                  <div className=\"input-field col s12 m7\">\n                    <select name=\"\" id=\"\" ref={this.categoryRef}>\n                      <option value=\"general\" defaultValue>General</option>\n                      <option value=\"business\">Business</option>\n                      <option value=\"entertainment\">Entertainment</option>\n                      <option value=\"health\">Health</option>\n                      <option value=\"science\">Science</option>\n                      <option value=\"sports\">Sports</option>\n                      <option value=\"technology\">Technology</option>\n                    </select>\n                  </div>\n                  <div className=\"input-field col s12 m5 enviar\">\n                    <input type=\"submit\" className=\"btn amber darken-2\" value=\"Search\"/>\n                  </div>\n                </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nForm.propTypes = {\n  newsConsult : PropTypes.func.isRequired\n}\n","import React,{Component} from 'react';\nimport Header from './components/Header'\nimport News from './components/News'\nimport Form from './components/Form'\nexport default class App extends Component {\n\n    state = {\n      news : []\n    }\n    componentDidMount() {\n      this.newsConsult();\n    }\n\n    newsConsult = (category = 'general') => {\n\n\n\n      let url = `https://newsapi.org/v2/top-headlines?country=us&category=${category}&apiKey=b17d28e75a034263b3c0d5e3f0027eb6`;\n\n      fetch(url).then(\n        rta => {\n          return rta.json();\n        }).then(news => {\n          this.setState({\n          news : news.articles\n        })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"contenedor-app\">\n                <Header title=\"News\"/>\n                <div className=\"container white contenedor-noticias\">\n                  <Form\n                  newsConsult={this.newsConsult}/>\n                  <News news={this.state.news} />\n                </div>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}